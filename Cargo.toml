[package]
authors = ["EightFactorial"]
edition = "2024"
homepage = "https://github.com/EightFactorial/facet-minecraft"
include = ["/src/**", "Cargo.toml"]
license = "MIT OR Apache-2.0"
name = "facet-minecraft"
readme = "README.md"
repository = "https://github.com/EightFactorial/facet-minecraft"
version = "0.1.0"

[lints.rust]
missing_docs = "warn"
trivial_casts = "warn"
trivial_numeric_casts = "warn"
unreachable_pub = "warn"
unused_import_braces = "warn"
unused_lifetimes = "warn"

[lints.rustdoc]
bare_urls = "deny"
broken_intra_doc_links = "deny"
invalid_codeblock_attributes = "deny"
invalid_html_tags = "deny"
invalid_rust_codeblocks = "deny"
private_intra_doc_links = "deny"

[lints.clippy]
cast_possible_truncation = "warn"
cast_possible_wrap = "warn"
clone_on_ref_ptr = "warn"
doc_markdown = "allow"
module_name_repetitions = "allow"
needless_pass_by_value = "allow"
pedantic = { level = "warn", priority = -1 }
std_instead_of_alloc = "deny"
std_instead_of_core = "deny"
unnecessary_cast = "warn"

[dev-dependencies]
divan = "0.1"

[dependencies]
facet-core = { default-features = false, features = ["alloc", "uuid"], version = "0.27" }
facet-derive = { default-features = false, version = "0.27" }
owo-colors = { features = ["alloc"], version = "4.2" }

# Optional dependencies
ariadne = { default-features = false, optional = true, version = "0.5" }
facet-deserialize = { default-features = false, features = ["alloc"], optional = true, version = "0.24" }
facet-json = { default-features = false, optional = true, version = "0.24" }
facet-reflect = { default-features = false, features = ["alloc", "uuid"], optional = true, version = "0.27" }
facet-serialize = { default-features = false, features = ["alloc"], optional = true, version = "0.24" }
inventory = { optional = true, version = "0.3" }
once_cell = { default-features = false, features = ["alloc"], optional = true, version = "1.21" }
parking_lot = { default-features = false, optional = true, version = "0.12" }

[features]
default = ["custom", "full", "rich-diagnostics", "std"]
# Enable all serialization and deserialization features
full = ["deserialize", "json", "serialize"]

# Allow custom serialization implementations
custom = ["dep:facet-reflect", "dep:inventory", "dep:once_cell"]
# Enable critical-section on `no_std` platforms
critical-section = ["once_cell?/critical-section"]
# Use `parking_lot` internally for synchronization
parking_lot = ["dep:parking_lot", "once_cell?/parking_lot"]

# Enable serializing fields as JSON
json = ["dep:facet-json", "dep:facet-reflect"]
# Enable rich diagnostics
rich-diagnostics = ["dep:ariadne", "facet-deserialize?/rich-diagnostics", "facet-json?/rich-diagnostics", "std"]

# Enable deserialization support
deserialize = ["dep:facet-deserialize", "dep:facet-reflect"]
# Enable serialization support
serialize = ["dep:facet-reflect", "dep:facet-serialize"]

# Enable support for the standard library
std = ["facet-core/std", "facet-deserialize?/std", "facet-reflect?/std", "facet-serialize?/std", "once_cell?/std"]
# Enable features using the nightly toolchain
nightly = ["parking_lot?/nightly"]

[[example]]
name = "custom"
required-features = ["custom", "deserialize", "serialize"]

[[bench]]
harness = false
name = "deserialize"
required-features = ["deserialize", "std"]

[[example]]
name = "deserialize"
required-features = ["deserialize"]

[[bench]]
harness = false
name = "serialize"
required-features = ["serialize", "std"]

[[example]]
name = "serialize"
required-features = ["serialize"]
