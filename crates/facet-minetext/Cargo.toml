[package]
authors = { workspace = true }
edition = { workspace = true }
homepage = { workspace = true }
license = { workspace = true }
name = "facet-minetext"
readme = { workspace = true }
repository = { workspace = true }
rust-version = { workspace = true }
version = { workspace = true }

[package.metadata.docs.rs]
all-features = true
rustdoc-args = ["--cfg", "docsrs"]

[lints]
workspace = true

[dev-dependencies]
divan = { workspace = true }
pretty_assertions = { workspace = true }

[dependencies]
ariadne = { optional = true, workspace = true }
facet-core = { optional = true, workspace = true }
facet-deserialize = { optional = true, workspace = true }
facet-macros = { optional = true, workspace = true }
facet-reflect = { optional = true, workspace = true }
facet-serialize = { optional = true, workspace = true }
owo-colors = { optional = true, workspace = true }

[features]
default = ["facet", "std"]

# Enable rich diagnostics
rich-diagnostics = ["dep:ariadne", "dep:owo-colors", "facet-deserialize?/rich-diagnostics", "std"]
# Enable support for `facet` crates
facet = ["dep:facet-core", "dep:facet-deserialize", "dep:facet-macros", "dep:facet-reflect", "dep:facet-serialize"]

# Enable support for the alloc library
alloc = ["facet-core?/alloc", "facet-reflect?/alloc", "owo-colors?/alloc", "pretty_assertions/alloc"]
# Enable support for the standard library
std = [
  "alloc",
  "facet-core?/std",
  "facet-deserialize?/std",
  "facet-reflect?/std",
  "facet-serialize?/std",
  "pretty_assertions/std",
]
# Enable features using the nightly toolchain
nightly = []
