[package]
authors = { workspace = true }
edition = { workspace = true }
homepage = { workspace = true }
license = { workspace = true }
name = "facet-snbt"
readme = { workspace = true }
repository = { workspace = true }
rust-version = { workspace = true }
version = { workspace = true }

[package.metadata.docs.rs]
all-features = true
rustdoc-args = ["--cfg", "docsrs"]

[lints]
workspace = true

[dev-dependencies]
divan = { workspace = true }
pretty_assertions = { workspace = true }

[dependencies]
facet-core = { workspace = true }
facet-macros = { workspace = true }
facet-nbt = { features = ["facet"], workspace = true }
facet-reflect = { workspace = true }

# Optional dependencies
ariadne = { optional = true, workspace = true }
facet-deserialize = { features = ["alloc"], optional = true, workspace = true }
facet-serialize = { features = ["alloc"], optional = true, workspace = true }
itoa = { optional = true, workspace = true }
once_cell = { features = ["alloc"], optional = true, workspace = true }
owo-colors = { optional = true, workspace = true }
regex-lite = { features = ["string"], optional = true, workspace = true }
ryu = { optional = true, workspace = true }
simd_cesu8 = { optional = true, workspace = true }

[features]
default = ["std"]

# Enable rich diagnostics
rich-diagnostics = [
  "dep:ariadne",
  "dep:owo-colors",
  "facet-deserialize?/rich-diagnostics",
  "facet-nbt/rich-diagnostics",
  "std",
]

# Enable support for the `uuid` crate
uuid = ["facet-core/uuid", "facet-nbt/uuid", "facet-reflect/uuid"]
# Enable critical-section on `no_std` platforms
critical-section = ["once_cell?/critical-section"]
# Enable once_cell on `no_std` platforms
once_cell = ["dep:once_cell"]

# Enable support for the alloc library
alloc = [
  "dep:facet-deserialize",
  "dep:facet-serialize",
  "dep:itoa",
  "dep:regex-lite",
  "dep:ryu",
  "dep:simd_cesu8",
  "facet-core/alloc",
  "facet-nbt/alloc",
  "facet-reflect/alloc",
  "owo-colors?/alloc",
  "pretty_assertions/alloc",
]
# Enable support for the standard library
std = [
  "alloc",
  "facet-core/std",
  "facet-deserialize?/std",
  "facet-nbt/std",
  "facet-reflect/std",
  "facet-serialize?/std",
  "once_cell?/std",
  "pretty_assertions/std",
  "regex-lite/std",
]
# Enable features using the nightly toolchain
nightly = ["facet-nbt/nightly", "simd_cesu8?/nightly"]
